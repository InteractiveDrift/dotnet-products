// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ProductsContext))]
    partial class ProductsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("API.Model.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("API.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlcoholContent")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssortmentCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssortmentText")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<float>("Deposit")
                        .HasColumnType("REAL");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ethical")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Kosher")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name2")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Organic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Origin")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginCountryName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Packaging")
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.Property<float>("PricePerLiter")
                        .HasColumnType("REAL");

                    b.Property<int?>("ProducerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductGroup")
                        .HasColumnType("TEXT");

                    b.Property<bool>("RawMaterialsDescription")
                        .HasColumnType("INTEGER");

                    b.Property<float>("SalesStart")
                        .HasColumnType("REAL");

                    b.Property<string>("SealType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Style")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stype")
                        .HasColumnType("TEXT");

                    b.Property<string>("Supplier")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vintage")
                        .HasColumnType("TEXT");

                    b.Property<float>("VolymInml")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("API.Model.Product", b =>
                {
                    b.HasOne("API.Model.Producer", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerId");

                    b.Navigation("Producer");
                });
#pragma warning restore 612, 618
        }
    }
}
